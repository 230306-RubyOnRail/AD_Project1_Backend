# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres:11-alpine
#         ports:
#           - "5432:5432"
#         env:
#           POSTGRES_DB: rails_test
#           POSTGRES_USER: rails
#           POSTGRES_PASSWORD: password
#     env:
#       RAILS_ENV: test
#       DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.3
          bundler-cache: true
      - name: Install Dependencies
        run: |
          gem install bundler
          cd project1/ers
          bundle install --jobs 4 --retry 3
#       - name: Run Rubocop
#         run: |
#           cd project1/ers
#           bundle exec rubocop --auto-correct
      - name: Run Unit Tests
        run: |
          cd project1/ers
          bundle exec rails test
#       - name: Install bundler
#         run: gem install bundler -v '~> 2.4'
#       # Add or replace database setup steps here
#       - name: Set up database schema
#         run: project1/ers/bin/rails db:schema:load
#       # Add or replace test runners here
#       - name: Run tests
#         run: project1/ers/bin/rake

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.3
          bundler-cache: true
#       - name: Install bundler
#         run: gem install bundler -v '~> 2.4'
      # Add or replace any other lints here
      - name: Security audit dependencies
        run: project1/ers/bin/bundle exec bundle audit --update
      - name: Security audit application code
        run: project1/ers/bin/bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: project1/ers/bin/bundle exec rubocop --parallel
